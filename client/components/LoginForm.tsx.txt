import React, { useState } from 'react';

import { useLoginMutation, MeQuery, MeDocument } from '../generated/graphql';
import { setAccessToken } from '../lib/utils/accessToken';
import Router from 'next/router';

interface PageProps {
  pageName: string;
}

const LoginForm = (pageProps: PageProps) => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [login] = useLoginMutation();

  const { pageName } = pageProps;

  return (
    <form
      name={pageName} // added this w/ the conditional functionality
      onSubmit={async e => {
        e.preventDefault();
        console.log('form submitted');
        const response = await login({
          variables: {
            email,
            password
          },
          update:
            pageName === 'login' // added the conditional here, hoping to combine this w/ register
              ? (store, { data }) => {
                  if (!data) {
                    return null;
                  }

                  store.writeQuery<MeQuery>({
                    query: MeDocument,
                    data: {
                      me: data.login.user
                    }
                  });
                }
              : () => null
        });

        console.log(response);

        if (response && response.data) {
          setAccessToken(response.data.login.accessToken);
        }

        Router.push('/');
      }}
    >
      <div>
        <input
          value={email}
          placeholder="email"
          onChange={e => {
            setEmail(e.target.value);
          }}
        />
      </div>
      <div>
        <input
          type="password"
          value={password}
          placeholder="password"
          onChange={e => {
            setPassword(e.target.value);
          }}
        />
      </div>
      <button type="submit">login</button>
    </form>
  );
};

export default LoginForm;
